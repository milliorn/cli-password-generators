name: Dependabot reviewer

on: pull_request_target

permissions:
  pull-requests: write
  contents: write

jobs:
  review-dependabot-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2.3.0

      - name: Squash and merge Dependabot PRs
        run: gh pr merge --squash --auto "${{ github.event.pull_request.number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve patch and minor updates
        if: ${{ steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch' || steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr review ${{ github.event.pull_request.number }} --approve -b "I'm **approving** this pull request because **it includes a patch or minor update**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve minor updates of development dependencies
        if: ${{ (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch' || steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor') && steps.dependabot-metadata.outputs.dependency-scope == 'development' }}
        run: gh pr review ${{ github.event.pull_request.number }} --approve -b "I'm **approving** this pull request because **it includes a minor or patch update of a dependency used only in development**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on major updates of dependencies
        if: ${{ steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major' }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "I'm **not approving** this PR because **it includes a major update**"
          gh pr edit ${{ github.event.pull_request.number }} --add-label "requires-manual-qa"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
